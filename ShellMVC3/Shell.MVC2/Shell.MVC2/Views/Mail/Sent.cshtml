@model IPageable<Shell.MVC2.Models.MailModel>
@using Omu.Awesome.Core
@using Omu.Awesome.Mvc.Helpers


  @{ //Pull the users who are avaiable to chat from from the viewbag
      var OnlineChatUsers = ViewBag.OnlineChatUsers as List<ChatUser>; 
     
   } 



@{
    ViewBag.Title = "Sent";
    Layout = "~/Views/Members/Shared/_LayoutMembers.cshtml";
}

@{ Html.EnableClientValidation(); }



<div id="postBoardDiv">
       <!-- Added to toggle adds 1-27-2012 --> 
     @Html.Partial("AddSense/TopBottomBanner")     
		</div>
    <div class="clearFloat"></div>
		<div id="photoBoxStrip">
			<div id="pic9">
			</div>
			<div id="pic8">
			</div>
			<div id="pic7">
			</div>
			<div id="pic6">
			</div>
			<div id="pic5">
			</div>
			<div id="pic4">
			</div>
			<div id="pic3">
			</div>
			<div id="pic2">
			</div>
			<div id="pic1">
			</div>
			<div class="clearFloat"></div>
		</div>
	<div class="clearFloat"></div>
	<div id="leftDivinbox">
		<div id="mailNavDivinbox">
			<div class="Txt_Inboxinbox">
				
					<p class="lastNode">Inbox
				</p>
			</div>
			<div class="Txt_900inbox">
				
					<p class="lastNode">@Html.ActionLink(ViewData["inbox"].ToString(), "MailHome", "Mail")
				</p>
			</div>
			<div class="clearFloat"></div>
			<div class="Txt_Sentinbox">
				
					<p class="lastNode">Sent
				</p>
			</div>
			<div class="Txt_500inbox">
				
					<p class="lastNode">@Html.ActionLink(ViewData["sent"].ToString(), "Sent", "Mail")
				</p>
			</div>
			<div class="clearFloat"></div>
			<div class="Txt_Trashinbox">
				
					<p class="lastNode">Trash
				</p>
			</div>
			<div class="Txt_100inbox">
				
					<p class="lastNode">@Html.ActionLink(ViewData["trash"].ToString(), "Trash", "Mail")
				</p>
			</div>
			<div class="clearFloat"></div>
		</div>
		<div class="clearFloat"></div>
	</div>
	<div id="bodyDivinbox">
		<div class="Txt_INBOXinbox">
			
				<p class="lastNode">SENT
			</p>
		</div>
		<div class="clearFloat"></div>
		<div id="inboxBoxinbox">
			<div id="inboxBox_topinbox">
			</div>
			<div class="Txt_Selectinbox">

			</div>
			<div id="deleteButtonDivinbox">
			</div>
			<div id="infoBarDivinbox">
				<div class="Txt_Frominbox">
					
						<p class="lastNode">To
					</p>
				</div>
				<div class="Txt_Repliedinbox">
					
						<p class="lastNode">Replied
					</p>
				</div>
				<div class="Txt_Readinbox">
					
						<p class="lastNode">Read
					</p>
				</div>
				<div class="Txt_Dateinbox">
					
						<p class="lastNode">Date
					</p>
				</div>
				<div class="Txt_Subjectinbox">
					
						<p class="lastNode">Subject
					</p>
				</div>
			</div>
            @{ int i = 1; }
               @{ foreach (var item in Model.Page)
                  { 
			
                       <div id="pic_boxinbox">
              @{ var tempSender = item.SenderName == null ? "UnkownSender" : item.SenderName; }
              <div class ="pic_boxinboxinner">
             <img  src="@Url.Action("GetGalleryImageByScreenName", "Images", new { id = item.SenderName }, null)" alt="" width ="93" height ="93" />
             </div> 
			
			</div>
			<div id="colwrap4inbox">
				<div id="inboxInfoDivinbox">
					<div class="Txt_Biginbox">
						
							<p class="lastNode">@Html.ActionLink(item.RecipientName, "NewReadMsg3", new { page = i, MailboxFolderID = item.MailboxFolderID, MailboxMessagesFoldersID = item.MailboxMessagesFoldersID })@{  i++; }:
						</p>
					</div>
					<div class="Txt_Thinkinbox">
						
							<p class="lastNode">@item.Subject
						</p>
					</div>
					<div class="Txt_Noinbox">
						
							<p class="lastNode">@item.Replied 
						</p>
					</div>
					<div class="Txt_Yesinbox">
						
							<p class="lastNode">@item.Read
						</p>
					</div>
					<div class="Txt_9202011inbox">
						
							<p class="lastNode">@String.Format("{0:g}", item.CreationDate)
						</p>
					</div>
				</div>
				<div class="clearFloat"></div>
			</div>
                      <div class="clearFloat"></div>
                    <div class="Active_within_hours_inbox">
                    		 @if (OnlineChatUsers != null && OnlineChatUsers != null && OnlineChatUsers.Any(p => p.Name.Contains(item.SenderName)))
                       {  
                                   @Html.Encode("Member Online Now!")
                                 @*  //TO DO check if the user allows random people to chat with them before adding the chat link
                                     //also convert to an inmage link ala quick profile page    
                                    	@Html.ActionLink("Chat",null,null, null, new { @class = "Link10", data_name=@item.ScreenName })*@
                                                                          
                                   <a href="javascript:void(0)" Id="InviteToChat" data-name=@item.SenderName >Chat</a> 
                       }
                    </div>
                    
			<div id="Lineinbox">
			</div>

                  } /* End of for each */ }
			<div class="clearFloat"></div>
            <div id="bottonpaginginbox">
            @Html.Pagination() 
            </div>
            <br />
                

		<div id="inboxBox_bottominbox">
		</div>
		</div>
		<div class="clearFloat"></div>
	</div>
	<div id="rightDivinbox">
    <center >
      <!-- Added to toggle adds 1-27-2012 -->
    @Html.Partial("AddSense/LeftRightScraper") 
    
</center> 
	</div>
	<div class="clearFloat"></div>

    <div id="footerPhotoEditsDiv">
<center>
        <!-- Added to toggle adds 1-27-2012 --> 
     @Html.Partial("AddSense/TopBottomBanner") 
</center> 
</div>



