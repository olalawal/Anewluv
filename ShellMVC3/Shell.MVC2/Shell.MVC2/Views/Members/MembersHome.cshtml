@model MembersViewModel



@{
    ViewBag.Title = "MembersHome";
    Layout = "~/Views/Members/Shared/_LayoutMembers.cshtml";
}

    @{ Html.EnableClientValidation(); }

    <script type="text/javascript">

        //toggles showing or hiding of postal code status based on postback values from get or post
        $(document).ready(function () {
         
            //load the cities for one
            SetCurrentCity();
            
            //this is tricky since it looks for  the value from the model
            var postalcodestatus = '@Model.MyQuickSearch.MySelectedPostalCodeStatus';


            //  alert('<%=Model.MyQuickSearch.MySelectedPostalCodeStatus %>');

            if (postalcodestatus == 'True') {
                //      alert('<%=Model.MyQuickSearch.MySelectedPostalCodeStatus %>');
                $('#ZipOrPostalQuickSearchHomePageDiv').show();
            }
            else {
                $('#ZipOrPostalQuickSearchHomePageDiv').hide();
            }

        });



        //sets a defult city on load 
        function SetCurrentCity() {

            var sportcmb = $("#MyQuickSearch_MySelectedCityStateProvince").data('tComboBox');
            //debugger;
            var url = '@Url.Action("GetCurrentCity","ComboBox", null, "http")';
            $.post(url,
              function (data) {

                  //set first value if u want
                  $("#MyQuickSearch_MySelectedCityStateProvince").data('tComboBox').value(data.MyCity);

              }, "json");
        }




        function UpdateCitiesAndPstalCodeDivMembersHome() {

            var sportcmb = $('#MyQuickSearch_MySelectedCountryName').data('tComboBox');
            var ziporpostalcmb = $('#MyQuickSearch_MySelectedPostalCode').data('tComboBox');


            if (sportcmb != null) {
                var sportId = sportcmb.valueOf();

               // debugger;
                var url = '@Url.Action("GetDefaultCityList","ComboBox", null, "http")';
                $.post(url,
              "CountryName=" + sportcmb.text(),
              function (data) {
                  $("#MyQuickSearch_MySelectedCityStateProvince").data('tComboBox').dataBind(data.Cities); //bind the city list after change

                  if (data.PostalCodeStatus != false) {
                      // alert("This country has postal codes");
                      $('#ZipOrPostalQuickSearchHomePageDiv').show();
                      // ziporpostalcmb.enable();
                  }
                  else {

                      //use the hide hoing forward after all is tested
                      $('#ZipOrPostalQuickSearchHomePageDiv').hide();
                      //set the value as the default postal code 
                      // ziporpostalcmb.value(data.postalcode);
                      //now disable it
                      //ziporpostalcmb.disable();
                  }

              }, "json");
            }
            else {
                alert("You must pick a country!");
                return;

            }
        }

        function UpdatePostalCodesMembersHome() {

            //reset postal code
            OnCityChange();

            var citycmb = $("#MyQuickSearch_MySelectedCityStateProvince").data('tComboBox');
            var ziporpostalcmb = $('#MyQuickSearch_MySelectedPostalCode').data('tComboBox');
            var countrycmb = $('#MyQuickSearch_MySelectedCountryName').data('tComboBox');


            //alert("your country is " + countrycmb.value());

            //does nothing atm
            if (citycmb.value() != null) {
                var cityid = citycmb.value();


                var cityprovince_array = citycmb.text().split(',');
                //alert(mytool_array[0] + " " + mytool_array[1] + " " + mytool_array[2]);

               // debugger;
                var url = '@Url.Action("GetDefaultPostalCodeListMembersHome","ComboBox", null, "http")';
                $.post(url, { City: cityprovince_array[0], CountryName: countrycmb.value() },
              function (data) {



                  if (data.PostalCodeStatus != false) {

                      $('#ZipOrPostalQuickSearchHomePageDiv').show;

                      try {
                          ziporpostalcmb.dataBind(data.postalcodes);
                      } catch (err) {
                          return false;
                      }

                  }
                  else {

                      //set the value to the geopostalcode value
                      ziporpostalcmb.value(data.geocode);
                      //  $('#ZipOrPostalQuickSearchHomePageDiv').hide(); 

                  }

                  //set the value to the geopostalcode value
                  //ziporpostalcmb.value(data.geocode);


              }, "json");
                //add a function to bind postal code as well
            }
            else {
                alert("You must pick a  city ");
                return;

            }
        }


        //functions to pass values to the ajax methods i.e like current city and country to help with binding
        //to do if we have the city and state find and auto fill the postal code please
        //****************************************************************************************************
        function onCityDataBinding(e) {


            var countrycmb = $('#MyQuickSearch_MySelectedCountryName').data('tComboBox');
            //pass the country name from the combo box of countries to the filtering json
            e.data = $.extend({}, e.data, { country: countrycmb.value() });

        }

        function onZipOrPostalCodeDataBinding(e) {

            var citycmb = $('#MyQuickSearch_MySelectedCityStateProvince').data('tComboBox');
            var countrycmb = $('#MyQuickSearch_MySelectedCountryName').data('tComboBox');

            //trim out comas and special chars out of the city
            if (citycmb.value() != null) {

                var cityprovince_array = citycmb.text().split(',');

                //pass the country name from the combo box of countries to the filtering json
                e.data = $.extend({}, e.data, { country: countrycmb.value(), city: cityprovince_array[0].toString() });

            }

        }


        //****************************************************************************************************

        //handle when the countries changes
        // we want to reset the rest of the combo boxes as well
        function OnCountryChange(e) {
            //reshow postal code inace it was hidded
            // $('#ZipOrPostalQuickSearchHomePageDiv').show();


            // var countrycombo = $("#Country").data('tComboBox');
            var citycombo = $("#MyQuickSearch_MySelectedCityStateProvince").data('tComboBox');
            var ziporpostalcombo = $('#MyQuickSearch_MySelectedPostalCode').data('tComboBox');

            citycombo.value("");
            citycombo.reload();
            ziporpostalcombo.value("");
            ziporpostalcombo.reload();

            // $('#ZipOrPostalQuickSearchHomePageDiv').hide();
        }


        //same thing for when the city changes we want to reset the postal code combo
        function OnCityChange(e) {

            //reshow postal code inace it was hidded
            //$('#ZipOrPostalQuickSearchHomePageDiv').show();

            var ziporpostalcombo = $('#MyQuickSearch_MySelectedPostalCode').data('tComboBox');
            ziporpostalcombo.value("");
            ziporpostalcombo.reload();
        }



</script>


   <div class="hiddenInViewSource" style="padding:20px;">
    <div id="mainhome">


    
    @{  List<SelectListItem> Ages = CachingFactory.SharedObjectHelper.GetAgeList();  } 
    @{  List<SelectListItem> Genders = CachingFactory.SharedObjectHelper.GetGenderList();  } 
    @{  List<SelectListItem> Countries = CachingFactory.SharedObjectHelper.GetCountrysList();  } 
	
	<div class="clearFloat"></div>
	<div class="bodyDivhome">
   
   
		<div id="colwraphome2">
			<div  class="linkAdDiv">

            
     <!-- Added to toggle adds 1-27-2012 -->
    
          @Html.Partial("AddSense/TopBottomLink") 
      

     
           

			</div>
         

			<div id="bigBubblesDiv">
             <div id="colwrapMyProfile">
				<div id="colwraphome5">
					<div id="photoPlaceDiv">

                    
                    <img  src="@Url.Action("GetGalleryImageByScreenName", "Images", new { id = Model.Profile.ScreenName},null)" alt="" width ="94" height ="95" />
                      
					</div>
					<div id="MyProfileDivRight">
						<li id="List_Itemhome">
								<a href="null">
                                  @Html.ActionLink("[add/edit photos]", "PhotoEditQuick", "EditProfile", null, new { @class = "List_Itemhome" })
                                
                                
                                </a>

							</li>
												<div class="clearFloat"></div>
						<li id="List_Itemhome2">
								  @Html.ActionLink("Who I Like", "WhoILike", "Members", null, new { @class = "List_Itemhome2" })
							</li>
												<div class="clearFloat"></div>
						<li id="List_Itemhome3">
								
                                 @Html.ActionLink("Interests", "Interests", "Members", null, new { @class = "List_Itemhome3" })

					  </li>
												<div class="clearFloat"></div>
	              
						
						
												
				
                    </div>
				</div>
               
				<div id="colwraphome6">
					<div id="myProfileDivLeft">
						<ul class="symbolListhome">
							<li id="List_Itemhome6">
                             <a href="@Url.Action("QuickProfileMine", new {page = 1  ,model = Model})">
								MY PROFILE</a>
							</li>
												<div class="clearFloat"></div>
						<li id="List_Itemhome7">
								
                                 @Html.ActionLink("[Edit]", "EditProfile", "EditProfile", null, new { @class = "List_Itemhome7" })
                               
                                
                               
							</li>
							<div class="clearFloat"></div>
						<li id="List_Itemhome8">
							 @Html.ActionLink("Who Took a Peek", "WhoViewedMe", "Members", null, new { @class = "List_Itemhome8" }) 
							</li>
												<li id="List_Itemhome9">
							 @Model.WhopeekededatMeCount
							</li>
												<div class="clearFloat"></div>
						<li id="List_Itemhome10">
								 @Html.ActionLink("Mail Sent", "Sent", "Mail", null, new { @class = "List_Itemhome10" }) 
							</li>
							<li id="List_Itemhome11">
								 @Model.MyMailCount
							</li>
							<div class="clearFloat"></div>
                            	
						    <li id="List_Itemhome12" >
								 @Html.ActionLink("Interest Sent", "InterestsSent", "Members", null, new { @class = "List_Itemhome12" }) 
							</li>
							<li id="List_Itemhome13">
								 @Model.MyIntrestCount
							</li>
												<div class="clearFloat"></div>
						<li id="List_Itemhome14">
								 @Html.ActionLink("Profiles Blocked", "WhoIBlocked", "Members", null, new { @class = "List_Itemhome14" }) 
					    </li>
						<div class="clearFloat"></div>
						<li id="List_Itemhome15">
								 @Model.MyBlockCount
							</li>
												<div class="clearFloat"></div>
						<li id="List_Itemhome16"  >
								
                                @Html.ActionLink("Who I Peeked At", "WhoIViewed", "Members", null, new { @class = "List_Itemhome16" }) 
                                
							</li>
												<div class="clearFloat"></div>
						<li id="List_Itemhome17">
                               @Model.MyPeeksCount
								
							</li>
												<div class="clearFloat"></div></ul>
					</div>
				</div>

                <div id="colwraphomelikes">
                <div class="clearFloat"></div>
                <div id="List_Itemhome4">
							  @Html.ActionLink("Likes", "Likes", "Members", null, new { @class = "List_Itemhome4" })
							</div>
		            <div class="clearFloat"></div>
						<div class="List_Itemhome18AsClass">
								 @Model.WholikesMeCount
							</div>
				<div class="clearFloat"></div>
                </div>
             </div>
             <div id="colwrapMyActivity">
             <div id="colwraphome7">
					<div id="infoNavBarDiv">
                    <div id="NewActivityhome" >
                     <a>
                          <img name="infoNav2_r1_c1_s1" src="../Content/images/infoNav2_r1_c1_s1.png" width="108" height="39" border="0" id="infoNav2_r1_c1_s1" alt="" />
                          
                          </a>
                    </div>
                    <div id="Rapportshome" >
                        
                          <a>
                          <img name="infoNav2_r1_c3_s1" src="../Content/images/infoNav2_r1_c3_s1.png" width="107" height="39" border="0" id="infoNav2_r1_c3_s1" alt="" />
                          
                          </a>
                    </div>
                    <div id="SavedSearcheshome" >
                        <a>
                       
                          @* @Html.ActionButton("","SavedSearches","Members",null,"SavedSearchesHome")*@
                        
                       <img name="infoNav2_r1_c3_s1" src="../Content/images/infoNav2_r1_c4_s1.png" width="107" height="39" border="0" id="infoNav2_r1_c4_s1.png" alt="" />
                         
                          
                          </a>
                    </div>
					  
                    </div>
					<div id="colwraphome9">
						<a href="#" class="LinkHomepage12">
                         @Html.ActionLink("View Mail", "MailHome", "Mail", null, new { @class = "LinkHomepage12" })                         
						
						</a>
						<a href="#" class="LinkHomepage13">
							 @Html.ActionLink("View Interests", "Interests", "Members", null, new { @class = "LinkHomepage13" })
						</a>
						<a href="#">
						 @Html.ActionLink("Similiar", "UnderConstruction", "Members", null, new { @class = "LinkHomepage14" })	
						</a>
						<a href="#" >
							 @Html.ActionLink("Opposites", "UnderConstruction", "Members", null, new { @class = "LinkHomepage15" })
						</a> 
				  </div>
                  	<div id="colwraphomeactivityupperbox">
						<div id="activityBoxUpperDiv">
							
							   @Html.ActionLink("NEW MAIL", "MailHome", "Mail", null, new { @class = "LinkHomepage16" })       
							
							<li  class="List_Itemhome18">
									 @Model.WhoMailedMeNewCount
                                    
								</li>
														<div class="clearFloat"></div>
							<a href="#">
                               @Html.ActionLink("NEW INTERESTS", "InterestsNew", "Members", null, new { @class = "LinkHomepage17" })
							
							</a>
							<li class="List_Itemhome19">
									 @Model.WhoisInterestedInMeNewCount
								</li>
								<div class="clearFloat"></div>
							<a href="#" class="LinkHomepage18">
								  @Html.ActionLink("NEW LIKES", "LikesNew", "Members", null, new { @class = "LinkHomepage17" })
							</a>
                            <li class ="List_Itemhome19" >
									 @Model.WhoLikesMeNewCount
                                    
								</li>
							<div class="clearFloat"></div>
						</div>
						<div class="clearFloat"></div>
					</div>
                    <a href="#" >
						  @Html.ActionLink("Visibility settings", "EditProfileVisibilitySettings", "EditProfile", null, new { @class = "LinkHomepage19" })
					</a>
					<div class="clearFloat"></div>
					<a href="#" >
                      @Html.ActionLink("Account settings", "Account", "Account", null, new { @class = "LinkHomepage20" })
						
					</a>
					<div class="clearFloat"></div>
				</div>
             </div>
             <div id="colwrapMyQuickSearch">
		   <div id="colwraphome10">
                @{ Html.BeginForm("QuickSearchMembers", "Home", FormMethod.Post); } 
				
			
					<div class="Txt_QUICK">
						
							<p class="lastNode">QUICK SEARCH
						</p>
					</div>
					<div class="clearFloat"></div>
                    <div class ="QuickSearchHomePageDivs" >
                    <div class="Txt_I’mHomepage">
							I&rsquo;m a
					</div>
					<div class="ComboBox_win_2Homepage ">
                   @(Html.Telerik().ComboBoxFor(model => Model.MyQuickSearch.MySelectedIamGenderID )
                                             .Name("MyQuickSearch.MySelectedIamGenderID")
                    .HtmlAttributes(new { style = string.Format("width: 75px"  ) })          
                    .BindTo(Genders)
                    .AutoFill(true)
)

                    </div>

                    <div class="Txt_SeekingHomepage">						
							Seeking						
					</div>				
				    <div class="ComboBox_winHomepage">
                                @(Html.Telerik().ComboBoxFor(model => Model.MyQuickSearch.MySelectedSeekingGenderID)
                                                          .Name("MyQuickSearch.MySelectedSeekingGenderID")
                    .HtmlAttributes(new { style = string.Format("width: 75px") })          
                    .BindTo(Genders) 
                     .AutoFill(true)
                    
                    
)
                    </div>
					</div>	
                    <div class="clearFloat"></div> 
                          
                    <div class="QuickSearchHomePageDivs">   

                   <div class="Txt_BetweenHomepage">
							Between
					</div>
                    <div class ="ComboBox_win_3Homepage">				 
                          @(Html.Telerik().ComboBoxFor(model => Model.MyQuickSearch.MySelectedFromAge)
                     .Name("MyQuickSearch.MySelectedFromAge")
                    .HtmlAttributes(new { style = string.Format("width: 75px") })          
                    .BindTo(Ages) 
                     .AutoFill(true)
                    
                    
)
                    
                    </div>
                                    
                     <div class="Txt_andHomepage">
							To
					</div>
					<div class="ComboBox_win_4Homepage">  
                                                
                                 @(Html.Telerik().ComboBoxFor(model => Model.MyQuickSearch.MyselectedToAge)
                     .Name("MyQuickSearch.MyselectedToAge")
                    .HtmlAttributes(new { style = string.Format("width: 75px") })          
                    .BindTo(Ages)
                     .AutoFill(true)
                    
                    
) 
                    </div>
				
                    </div>  

                    <div class ="QuickSearchHomePageDivs">
                    <div class="Txt_CountryHomepage">						
						 Country						
					</div>
                    <div class ="TextField_CountryHomepage">
                      
                           @(Html.Telerik().ComboBoxFor(model => Model.MyQuickSearch.MySelectedCountryName)
                                                      .Name("MyQuickSearch.MySelectedCountryName")
                      .AutoFill(true) //fill it with default data
                    
                     .BindTo(Countries)
                     .HtmlAttributes(new { style = string.Format("width:{0}px",170) })
                      
                       .AutoFill(true)
                      .HighlightFirstMatch(true) 
                      .ClientEvents(events => events.OnChange("UpdateCitiesAndPstalCodeDivMembersHome"))
                    

                    
)  
                    </div>
                    
                    
                    </div>

                    <div class ="QuickSearchHomePageDivs">
                    <div class="Txt_CityHomepage">						
					 City						
					</div>
                    <div class ="TextField_CityHomepage">
                    
                       @(Html.Telerik().ComboBoxFor(model => Model.MyQuickSearch.MySelectedCityStateProvince)                                                
                                                 .Name("MyQuickSearch.MySelectedCityStateProvince")
                                .ClientEvents(events => events.OnLoad("SetCurrentCity"))
                                 .ClientEvents(events => events.OnChange("UpdatePostalCodesMembersHome"))
                                .ClientEvents(events => events.OnDataBinding("onCityDataBinding"))        
                      .AutoFill(true)
                          .HtmlAttributes(new { style = string.Format("width:{0}px", 192) })
                        .DataBinding(binding => binding.Ajax()
                                                     .Select("_FilteringAjax", "ComboBox")
                          .Delay(300)
                          .Cache(false)
                               )                    
                                             
                      .Filterable(filtering =>
                      {
                          if (1 != 0)
                          {
                              filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                              filtering.MinimumChars(0);
                          }
                      })
                      .HighlightFirstMatch(true)
                      
                      
)
                          
                    </div>	
                    </div>
				
                    <div id="ZipOrPostalQuickSearchHomePageDiv">
                   
       
             <div class="Txt_ZipPostalHomePage">						
					Zip/Postal					
					</div> 
            <div class="TextField_ZipPostalHomePage">
            <div class="editor-field">
                
                @(Html.Telerik().ComboBoxFor(model =>  model.MyQuickSearch.MySelectedPostalCode)
                                             .Name("MyQuickSearch.MySelectedPostalCode")
                      .AutoFill(true)
                      .ClientEvents(events => events.OnDataBinding("onZipOrPostalCodeDataBinding"))                     
                        .HtmlAttributes(new { style = string.Format("width:{0}px;margin-top:-2px;", 90) })
                        .DataBinding(binding => binding.Ajax()
                                               .Select("_FilteringPostalCodesAjaxRegister", "ComboBox")
                                               
                          .Delay(300)
                          .Cache(false)
                               )                    
                                             
                      .Filterable(filtering =>
                      {
                          if (1 != 0)
                          {
                              filtering.FilterMode(AutoCompleteFilterMode.StartsWith);
                              filtering.MinimumChars(0);
                          }
                      })
                      .HighlightFirstMatch(true)
                      
                      
                      
)
                   
            </div>			       
			</div>
             
         
        
                    </div>
                   
                    <div class="clearFloat"></div> 
                    <div class ="QuickSearchHomePageDivs2">
                    <div class="Txt_LivingHomePage">						
				     Living					
					</div>
                    <div class ="TextField_LivingHomePage">
                      @Html.TextBoxFor(model => model.MyQuickSearch.MySelectedMaxDistanceFromMe, new { style = "width:55px" }) 
                    </div>					
					<div class="Txt_nearHomepage">						
					  From Me
					</div>
                    <div class ="TextBoxGo_win_2Homepage">
                  
                     <button type="submit" class="btn">Search</button>
                    </div>                    
                        </div>             
                     
                    
                    <div class="clearFloat"></div>                     
				 <div class ="QuickSearchHomePageDivs2">
					<div class="CheckBox_winHomepage">
                    <label> @Html.CheckBoxFor(model => Model.MyQuickSearch.MySelectedPhotoStatus)                    
                    </label>
                    </div>
                    <div class="PhotosOnly_winHomepage">
                    Photos only
                    </div>
                     				
                    <div class="srchNowDivHomepage">
                  
                      @Html.ActionLink("CUSTOMIZE MORE>>", "CustomSearch", "Members", null, new { @class = "LinkHomepage21" })						
				
					</div>				
					</div> 
					<div class="clearFloat"></div>
				</div>
                 @Html.HiddenFor(model => model.MyQuickSearch.mySelectedPageSize)
                 @Html.HiddenFor(model => model.MyQuickSearch.mySelectedCurrentPage)

                @{ Html.EndForm(); } 
					
			</div>
            </div>
			<div class="linkAdDiv">
               
                          @Html.Partial("AddSense/TopBottomLink")  

     


			</div>
            @* TO DO remove this partial view thing ? *@
			<div id="PartialviewForMatches">
            <div id="picBoxDiv">
            

             @{  var pp = new  Infrastructure.PaginatedList<MemberSearchViewModel>(); } 
             @{  var productPagedList = pp.GetPageableList((List<MemberSearchViewModel>)(ViewBag.MyMatches), (int?)ViewData["Page"] ?? 1, 5); } 
             @if (productPagedList!=null) 
              { 
                   @Html.Partial("MyMatches", productPagedList) 
              }  


             

           

            </div>
            <div class="clearFloat"></div> 
            </div>
            		<div class="postBoardDivHome">
                       
       
       @Html.Partial("AddSense/TopBottomBanner") 

       
     

			</div>
		</div>
        		
		<div id="AdRightDiv">
          
       @Html.Partial("AddSense/LeftRightScraper") 

       

    
		</div>
		<div class="clearFloat"></div>
	</div>
	

</div>
</div> 




<!-- hidded dialog for updates and message -->
<div id="dialog-confirm" title="Complete your Profilel">

<div id="SuccessContainer"></div>	

</div>

<script type="text/javascript">




   //Jqeuery to handle ANY selection of checkboxes
$(function () {

      // open dialog popup before you delete email
        // open dialog popup before you delete email
    $('#dialog-confirm').dialog({
        autoOpen: false,
        width: 400,
        modal: true,
        resizable: false, //Dialog options
        buttons: {
            Cancel: function () {
                $(this).dialog('close');
            },
            'Ok': function () {
                 window.location= $(this).data('url');
                 $(this).dialog('close');
               // var path = $(this).data('id').href; // Get the stored result 
               // $(location).attr('href', path);
            }
        } 

    });

});



       $(document).ready(function () {
           $('#load').hide();
           var commentContainer
           var string;
           UpdateMemberStatus();


       });

           //this function runs before the dailog to make sure the have not edit thier profile
       // or seen the popup already in the current session.
       function UpdateMemberStatus() {

          // debugger;
           var url = '@Url.Action("CheckMemberStatus", "Members", null, "http")';
           $.post(url, '',
              function (data) {


                  if (data.Status == false) {

                      //set the content of the message from json result
                      $("#SuccessContainer").html(data.Message);
                      //set the redirect URL if any
                      var url = data.url
                      $('#dialog-confirm')
                .data('url', url)
                .dialog('open');


                  }
                  else {

                  }


              }, "json");
           //add a function to bind postal code as well

       }


    



      


</script>



