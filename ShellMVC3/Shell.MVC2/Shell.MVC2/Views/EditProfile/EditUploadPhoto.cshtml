@model Shell.MVC2.Models.PhotoViewModel


     
@using Shell.MVC2.Controllers


<script src="<%: Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")%>" type="text/javascript"></script>
<script src="<%: Url.Content("~/Scripts/jquery.validate.min.js")%>" type="text/javascript"></script>
<script src="<%: Url.Content("~/Scripts/MicrosoftAjax.js")%>" type="text/javascript"></script>
<script src="<%: Url.Content("~/Scripts/MicrosoftMvcAjax.js")%>" type="text/javascript"></script>
 <script type="text/javascript">
     var bytesPerMB = 1048576;

     function onUpload(e) {
         // Array with information about the uploaded files
         var files = e.files;

         // Check the extension of each file and abort the upload if the file is larger than a prescribed size, 5MB in this case
         $(files).each(function (index, file) {

             if (file.size && (file.size > 5 * bytesPerMB)) {
                 alert("Your image is greater than 5MB in size. Please select a smaller image")
                 e.preventDefault();
                 return false;
             }
         });
     }

</script>




<div id="dialog" title="Upload files">  

 <div class="clearFloat"></div> 
 @Html.ValidationMessage("UploadPhotoError", new { @class="new-field-validation-error" }) <br /><br /> 

<p class="lastNode">
<b>Please upload a photo here:</b><br /> You can upload up to as many pictures you want by <br />clicking the <i>select button</i> below.
</p>

   
 <br />


    @using (Html.BeginForm("PhotoEditQuick", "EditProfile", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

        
       <div>


            <div class="clearFloat"></div>

        <div class="clearFloat"></div>


             @(Html.Telerik().Upload()
             .Name("attachments")            
             .Multiple(true)                       
             .Async(async => async
                 .Save("Save", "Images")                
                 .Remove("Remove", "Images")  
                               
                 .AutoUpload(true))                 
                  .ClientEvents(events => events
            .OnUpload("onUpload"))       
)
              
             
            
            <div class="clearFloat"></div> 

          
         
       <div class="clearFloat"></div>
        

              <div id="buttonTelerik1"> 
                  <button class="t-button" type="submit" name ="Uploadbutton" value="submit" >Submit</button>  
              </div>     
               <div id="buttonTelerik2">
               <button class="t-button" type="submit" name="CancelUploadbutton" value="cancel" >Cancel</button>          
			</div>
            <div class="clearFloat"></div>


	   </div> 	

     } 


 



   
</div>
