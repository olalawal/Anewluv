@model Shell.MVC2.Models.AdminPhotoModel

@{ Html.EnableClientValidation(); }
   



<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/MicrosoftAjax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/MicrosoftMvcAjax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/main.js")" type="text/javascript"></script>

<script type="text/javascript">

    $(function () {
        $("#ddlAprovedList option").each(function () {
            $(this).attr({ 'title': $(this).html() });
        });

        $("#ddlAproved").change(function () {
            var ApprovalStatus = $(this).val();
            // $("#stat").html(ApprovalStatus);
            if (ApprovalStatus == 'No') {
                $("#PhotoRejectionReasonID").attr('disabled', false);
            } else { // else if unnecessary
                $("#PhotoRejectionReasonID").attr('disabled', true);

            };
        });

        //Get Dropdownlist value and display rejection reason dropdownlist
        $(function DisplayRejectionDropdownlist() {
            var ApprovalStatus = $("#ddlAproved").val();
            if (ApprovalStatus == 'No') {
                $("#PhotoRejectionReasonID").attr('disabled', false);
            } else { // else if unnecessary
                $("#PhotoRejectionReasonID").attr('disabled', true);

            };
        });


    });
</script>

<style>
    /*
body {
	margin:0;
	padding:40px;
	background:#fff;
	font:80% Arial, Helvetica, sans-serif;
	color:#555;
	line-height:180%;
}

h1{
	font-size:180%;
	font-weight:normal;
	color:#555;
}
h2{
	clear:both;
	font-size:160%;
	font-weight:normal;
	color:#555;
	margin:0;
	padding:.5em 0;
}
*/
a{
	text-decoration:none;
	color:#f30;	
	/*width:400px;
	height:300px;*/
}
p{
	clear:both;
	margin:0;
	padding:.5em 0;
}
pre{
	display:block;
	font:100% "Courier New", Courier, monospace;
	padding:10px;
	border:1px solid #bae2f0;
	background:#e3f4f9;	
	margin:.5em 0;
	overflow:auto;
	width:800px;
}

img{border:none;}
ul,li{
	margin:0;
	padding:0;
}
li{
	list-style:none;
	float:left;
	display:inline;
	margin-right:10px;
}



/*  */

#preview{
	position:absolute;
	border:1px solid #ccc;
	background:#333;
	padding:5px;
	display:none;
	color:#fff;
	/*width:400px; height:300px;*/
	}

/*  */
</style>

<div style="width:450px;float:left;font-family: verdana,Arial, Helvetica, sans-serif;  ">
 @* <span id="stat">status </span>*@

@using (Html.BeginForm())
{ 
        @Html.ValidationSummary(true)
        <fieldset>
            <legend> Edit Photo</legend>

<a
 href="@Url.Action("GetGalleryImageByPhotoID", "Images", new { id = Model.PhotoID }, null)"  
 class="preview" title="Lake and a mountain">
<img  src="@Url.Action("GetGalleryImageByPhotoID", "Images", new { id = Model.PhotoID }, null)" 
alt="gallery thumbnail" width ="194" height ="194" /></a>
					   
            @Html.HiddenFor(model => model.PhotoID)            
            @Html.HiddenFor(model => model.ProfileID)
            @Html.HiddenFor(model => model.ProfileImageType)

            <div class="editor-label">
                @Html.LabelFor(model => model.ProfileID):   @Html.DisplayFor(model => model.ProfileID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.PhotoDate):   @Html.DisplayFor(model => model.PhotoDate)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ProfileImageType)
            
                @Html.TextBoxFor(model => model.ProfileImageType, new { disabled = "disabled", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ProfileImageType)
            </div>
            <div class="editor-field">Aproved Value:
                @Html.DisplayFor(model => model.Aproved)
                @Html.ValidationMessageFor(model => model.Aproved)

            </div>
            @*<br /><br />*@
           <div class="editor-label">
              Photo Approved  
            
            @Html.DropDownListFor(model => model.Aproved, Model.AprovedList as IEnumerable<SelectListItem>, new { @id = "ddlAproved" })
@*              <%= Html.DropDownListFor(model => model.Aproved, Model.AprovedList as IEnumerable<SelectListItem>, "Select One", new { @id = "ddlAproved" })%>
*@          
            @*<%=Html.DropDownList("AprovedID", (SelectList)Model.AprovedList, "--Select One--")%>*@
            </div>
             
              <div class="editor-label">
              Reason for Photo Rejection
           @Html.DropDownListFor(model => model.PhotoRejectionReasonID, (SelectList)Model.PhotoRejectionReasonList, "--Select Reason for Photo Rejection--", new { @id = "PhotoRejectionReasonID", @disabled = "disabled" })
         @*  @Html.ValidationMessageFor(x => x.CategoryId)*@
          <br />
          @Html.ValidationMessageFor(model => model.PhotoRejectionReasonID)
            </div>
       
                       
            <br /><br /><br />


        <p>
            <input type="submit" value="Save & Email" />
        </p>
    </fieldset>
 } 
</div>


