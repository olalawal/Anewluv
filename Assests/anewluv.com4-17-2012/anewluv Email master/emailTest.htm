<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title></title>
	<link rel="stylesheet" type="text/css" href="./emailTest.css" media="all" />
	<!--[if IE]>
	<style type="text/css" media="all">.borderitem {border-style: solid;}</style>
	<![endif]-->
</head>

<body>

<div id="main">
	<div id="matchbox">
		<div id="colwrap2">
			<div id="PhotoContent">
				<div id="picFrame">
					<div id="picInner">
					</div>
					<div class="clearFloat"></div>
				</div>
				<div class="clearFloat"></div>
			</div>
		</div>
		<div id="colwrap3">
			<div id="content">
				<div class="Txt_Lorem">
					
						<p class="lastNode">LCentering elements vertically with css is something that often gives designers trouble. There are however a variety of methods for vertical centering and each is fairly easy to use. Today I want to present 6 of those methods.

I’ve usually skipped over the topic of vertical centering, since there are some good posts already out there that are easy enough to find, but recently Bikram commented requesting a tutorial on vertically centering so I thought why not.

You can view demos of each of the methods below by clicking here. Clicking the images above each section will also take you to that specific demo.

Let’s start by first talking about something that doesn’t work as many expect. Understanding why vertical-align doesn’t always work will help us better understand vertical centering in general.</p>
				</div>
				<div class="clearFloat"></div>
			</div>
		</div>
		<div id="icons">
		</div>
		<div class="clearFloat"></div>
	</div>
	<div class="clearFloat"></div>
</div>
</body>
</html>
