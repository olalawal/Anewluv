//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Misc.PhotoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhotoService.IPhotoService")]
    public interface IPhotoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getphotomodelbyphotoid", ReplyAction="http://tempuri.org/IPhotoService/getphotomodelbyphotoidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.PhotoModel getphotomodelbyphotoid(string photoid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getphotomodelbyphotoid", ReplyAction="http://tempuri.org/IPhotoService/getphotomodelbyphotoidResponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.PhotoModel> getphotomodelbyphotoidAsync(string photoid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryphotomodelbyprofileid", ReplyAction="http://tempuri.org/IPhotoService/getgalleryphotomodelbyprofileidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.PhotoModel getgalleryphotomodelbyprofileid(string profileid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryphotomodelbyprofileid", ReplyAction="http://tempuri.org/IPhotoService/getgalleryphotomodelbyprofileidResponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.PhotoModel> getgalleryphotomodelbyprofileidAsync(string profileid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getphotomodelsbyprofileidandstatus", ReplyAction="http://tempuri.org/IPhotoService/getphotomodelsbyprofileidandstatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.PhotoModel> getphotomodelsbyprofileidandstatus(string profileid, string status, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getphotomodelsbyprofileidandstatus", ReplyAction="http://tempuri.org/IPhotoService/getphotomodelsbyprofileidandstatusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.PhotoModel>> getphotomodelsbyprofileidandstatusAsync(string profileid, string status, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getpagedphotomodelbyprofileidandstatus", ReplyAction="http://tempuri.org/IPhotoService/getpagedphotomodelbyprofileidandstatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.PhotoModel> getpagedphotomodelbyprofileidandstatus(string profileid, string status, string format, string page, string pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getpagedphotomodelbyprofileidandstatus", ReplyAction="http://tempuri.org/IPhotoService/getpagedphotomodelbyprofileidandstatusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.PhotoModel>> getpagedphotomodelbyprofileidandstatusAsync(string profileid, string status, string format, string page, string pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getpagedphotoviewmodelbyprofileid", ReplyAction="http://tempuri.org/IPhotoService/getpagedphotoviewmodelbyprofileidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.PhotoViewModel getpagedphotoviewmodelbyprofileid(string profileid, string format, string page, string pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getpagedphotoviewmodelbyprofileid", ReplyAction="http://tempuri.org/IPhotoService/getpagedphotoviewmodelbyprofileidResponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.PhotoViewModel> getpagedphotoviewmodelbyprofileidAsync(string profileid, string format, string page, string pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getphotoeditmodelbyphotoid", ReplyAction="http://tempuri.org/IPhotoService/getphotoeditmodelbyphotoidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.photoeditmodel getphotoeditmodelbyphotoid(string photoid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getphotoeditmodelbyphotoid", ReplyAction="http://tempuri.org/IPhotoService/getphotoeditmodelbyphotoidResponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.photoeditmodel> getphotoeditmodelbyphotoidAsync(string photoid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getphotoeditmodelsbyprofileidandstatus", ReplyAction="http://tempuri.org/IPhotoService/getphotoeditmodelsbyprofileidandstatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.photoeditmodel> getphotoeditmodelsbyprofileidandstatus(string profileid, string status, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getphotoeditmodelsbyprofileidandstatus", ReplyAction="http://tempuri.org/IPhotoService/getphotoeditmodelsbyprofileidandstatusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.photoeditmodel>> getphotoeditmodelsbyprofileidandstatusAsync(string profileid, string status, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getpagedphotoeditmodelsbyprofileidstatus", ReplyAction="http://tempuri.org/IPhotoService/getpagedphotoeditmodelsbyprofileidstatusResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.photoeditmodel> getpagedphotoeditmodelsbyprofileidstatus(string profileid, string status, string format, string page, string pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getpagedphotoeditmodelsbyprofileidstatus", ReplyAction="http://tempuri.org/IPhotoService/getpagedphotoeditmodelsbyprofileidstatusResponse" +
            "")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.photoeditmodel>> getpagedphotoeditmodelsbyprofileidstatusAsync(string profileid, string status, string format, string page, string pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getpagededitphotoviewmodelbyprofileidandformat", ReplyAction="http://tempuri.org/IPhotoService/getpagededitphotoviewmodelbyprofileidandformatRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.PhotoEditViewModel getpagededitphotoviewmodelbyprofileidandformat(string profileid, string format, string page, string pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getpagededitphotoviewmodelbyprofileidandformat", ReplyAction="http://tempuri.org/IPhotoService/getpagededitphotoviewmodelbyprofileidandformatRe" +
            "sponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.PhotoEditViewModel> getpagededitphotoviewmodelbyprofileidandformatAsync(string profileid, string format, string page, string pagesize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/deleteuserphoto", ReplyAction="http://tempuri.org/IPhotoService/deleteuserphotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.AnewluvMessages deleteuserphoto(string photoid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/deleteuserphoto", ReplyAction="http://tempuri.org/IPhotoService/deleteuserphotoResponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> deleteuserphotoAsync(string photoid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/makeuserphoto_private", ReplyAction="http://tempuri.org/IPhotoService/makeuserphoto_privateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.AnewluvMessages makeuserphoto_private(string photoid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/makeuserphoto_private", ReplyAction="http://tempuri.org/IPhotoService/makeuserphoto_privateResponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> makeuserphoto_privateAsync(string photoid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/makeuserphoto_public", ReplyAction="http://tempuri.org/IPhotoService/makeuserphoto_publicResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.AnewluvMessages makeuserphoto_public(string photoid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/makeuserphoto_public", ReplyAction="http://tempuri.org/IPhotoService/makeuserphoto_publicResponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> makeuserphoto_publicAsync(string photoid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/addphotos", ReplyAction="http://tempuri.org/IPhotoService/addphotosResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.AnewluvMessages addphotos(Anewluv.Domain.Data.ViewModels.photou model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/addphotos", ReplyAction="http://tempuri.org/IPhotoService/addphotosResponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> addphotosAsync(Anewluv.Domain.Data.ViewModels.PhotosUploadModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/addsinglephoto", ReplyAction="http://tempuri.org/IPhotoService/addsinglephotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        Anewluv.Domain.Data.ViewModels.AnewluvMessages addsinglephoto(Anewluv.Domain.Data.ViewModels.PhotoUploadModel newphoto, string profileid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/addsinglephoto", ReplyAction="http://tempuri.org/IPhotoService/addsinglephotoResponse")]
        System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> addsinglephotoAsync(Anewluv.Domain.Data.ViewModels.PhotoUploadModel newphoto, string profileid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/checkvalidjpggif", ReplyAction="http://tempuri.org/IPhotoService/checkvalidjpggifResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        bool checkvalidjpggif(byte[] image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/checkvalidjpggif", ReplyAction="http://tempuri.org/IPhotoService/checkvalidjpggifResponse")]
        System.Threading.Tasks.Task<bool> checkvalidjpggifAsync(byte[] image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryphotobyscreenname", ReplyAction="http://tempuri.org/IPhotoService/getgalleryphotobyscreennameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        string getgalleryphotobyscreenname(string screenname, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryphotobyscreenname", ReplyAction="http://tempuri.org/IPhotoService/getgalleryphotobyscreennameResponse")]
        System.Threading.Tasks.Task<string> getgalleryphotobyscreennameAsync(string screenname, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryimagebyphotoid", ReplyAction="http://tempuri.org/IPhotoService/getgalleryimagebyphotoidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        string getgalleryimagebyphotoid(string photoid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryimagebyphotoid", ReplyAction="http://tempuri.org/IPhotoService/getgalleryimagebyphotoidResponse")]
        System.Threading.Tasks.Task<string> getgalleryimagebyphotoidAsync(string photoid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryphotobyprofileid", ReplyAction="http://tempuri.org/IPhotoService/getgalleryphotobyprofileidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        string getgalleryphotobyprofileid(string profileid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryphotobyprofileid", ReplyAction="http://tempuri.org/IPhotoService/getgalleryphotobyprofileidResponse")]
        System.Threading.Tasks.Task<string> getgalleryphotobyprofileidAsync(string profileid, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryimagebynormalizedscreenname", ReplyAction="http://tempuri.org/IPhotoService/getgalleryimagebynormalizedscreennameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        string getgalleryimagebynormalizedscreenname(string screenname, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getgalleryimagebynormalizedscreenname", ReplyAction="http://tempuri.org/IPhotoService/getgalleryimagebynormalizedscreennameResponse")]
        System.Threading.Tasks.Task<string> getgalleryimagebynormalizedscreennameAsync(string screenname, string format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/checkifphotocaptionalreadyexists", ReplyAction="http://tempuri.org/IPhotoService/checkifphotocaptionalreadyexistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        bool checkifphotocaptionalreadyexists(string profileid, string photocaption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/checkifphotocaptionalreadyexists", ReplyAction="http://tempuri.org/IPhotoService/checkifphotocaptionalreadyexistsResponse")]
        System.Threading.Tasks.Task<bool> checkifphotocaptionalreadyexistsAsync(string profileid, string photocaption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/checkforgalleryphotobyprofileid", ReplyAction="http://tempuri.org/IPhotoService/checkforgalleryphotobyprofileidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        bool checkforgalleryphotobyprofileid(string profileid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/checkforgalleryphotobyprofileid", ReplyAction="http://tempuri.org/IPhotoService/checkforgalleryphotobyprofileidResponse")]
        System.Threading.Tasks.Task<bool> checkforgalleryphotobyprofileidAsync(string profileid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/checkforuploadedphotobyprofileid", ReplyAction="http://tempuri.org/IPhotoService/checkforuploadedphotobyprofileidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        bool checkforuploadedphotobyprofileid(string profileid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/checkforuploadedphotobyprofileid", ReplyAction="http://tempuri.org/IPhotoService/checkforuploadedphotobyprofileidResponse")]
        System.Threading.Tasks.Task<bool> checkforuploadedphotobyprofileidAsync(string profileid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getimageb64stringfromurl", ReplyAction="http://tempuri.org/IPhotoService/getimageb64stringfromurlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceFault), Action="http://Schemas.Testws.Medtox.com", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/")]
        string getimageb64stringfromurl(string imageUrl, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoService/getimageb64stringfromurl", ReplyAction="http://tempuri.org/IPhotoService/getimageb64stringfromurlResponse")]
        System.Threading.Tasks.Task<string> getimageb64stringfromurlAsync(string imageUrl, string source);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhotoServiceChannel : Misc.PhotoService.IPhotoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhotoServiceClient : System.ServiceModel.ClientBase<Misc.PhotoService.IPhotoService>, Misc.PhotoService.IPhotoService {
        
        public PhotoServiceClient() {
        }
        
        public PhotoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhotoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Anewluv.Domain.Data.ViewModels.PhotoModel getphotomodelbyphotoid(string photoid, string format) {
            return base.Channel.getphotomodelbyphotoid(photoid, format);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.PhotoModel> getphotomodelbyphotoidAsync(string photoid, string format) {
            return base.Channel.getphotomodelbyphotoidAsync(photoid, format);
        }
        
        public Anewluv.Domain.Data.ViewModels.PhotoModel getgalleryphotomodelbyprofileid(string profileid, string format) {
            return base.Channel.getgalleryphotomodelbyprofileid(profileid, format);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.PhotoModel> getgalleryphotomodelbyprofileidAsync(string profileid, string format) {
            return base.Channel.getgalleryphotomodelbyprofileidAsync(profileid, format);
        }
        
        public System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.PhotoModel> getphotomodelsbyprofileidandstatus(string profileid, string status, string format) {
            return base.Channel.getphotomodelsbyprofileidandstatus(profileid, status, format);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.PhotoModel>> getphotomodelsbyprofileidandstatusAsync(string profileid, string status, string format) {
            return base.Channel.getphotomodelsbyprofileidandstatusAsync(profileid, status, format);
        }
        
        public System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.PhotoModel> getpagedphotomodelbyprofileidandstatus(string profileid, string status, string format, string page, string pagesize) {
            return base.Channel.getpagedphotomodelbyprofileidandstatus(profileid, status, format, page, pagesize);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.PhotoModel>> getpagedphotomodelbyprofileidandstatusAsync(string profileid, string status, string format, string page, string pagesize) {
            return base.Channel.getpagedphotomodelbyprofileidandstatusAsync(profileid, status, format, page, pagesize);
        }
        
        public Anewluv.Domain.Data.ViewModels.PhotoViewModel getpagedphotoviewmodelbyprofileid(string profileid, string format, string page, string pagesize) {
            return base.Channel.getpagedphotoviewmodelbyprofileid(profileid, format, page, pagesize);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.PhotoViewModel> getpagedphotoviewmodelbyprofileidAsync(string profileid, string format, string page, string pagesize) {
            return base.Channel.getpagedphotoviewmodelbyprofileidAsync(profileid, format, page, pagesize);
        }
        
        public Anewluv.Domain.Data.ViewModels.photoeditmodel getphotoeditmodelbyphotoid(string photoid, string format) {
            return base.Channel.getphotoeditmodelbyphotoid(photoid, format);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.photoeditmodel> getphotoeditmodelbyphotoidAsync(string photoid, string format) {
            return base.Channel.getphotoeditmodelbyphotoidAsync(photoid, format);
        }
        
        public System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.photoeditmodel> getphotoeditmodelsbyprofileidandstatus(string profileid, string status, string format) {
            return base.Channel.getphotoeditmodelsbyprofileidandstatus(profileid, status, format);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.photoeditmodel>> getphotoeditmodelsbyprofileidandstatusAsync(string profileid, string status, string format) {
            return base.Channel.getphotoeditmodelsbyprofileidandstatusAsync(profileid, status, format);
        }
        
        public System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.photoeditmodel> getpagedphotoeditmodelsbyprofileidstatus(string profileid, string status, string format, string page, string pagesize) {
            return base.Channel.getpagedphotoeditmodelsbyprofileidstatus(profileid, status, format, page, pagesize);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Anewluv.Domain.Data.ViewModels.photoeditmodel>> getpagedphotoeditmodelsbyprofileidstatusAsync(string profileid, string status, string format, string page, string pagesize) {
            return base.Channel.getpagedphotoeditmodelsbyprofileidstatusAsync(profileid, status, format, page, pagesize);
        }
        
        public Anewluv.Domain.Data.ViewModels.PhotoEditViewModel getpagededitphotoviewmodelbyprofileidandformat(string profileid, string format, string page, string pagesize) {
            return base.Channel.getpagededitphotoviewmodelbyprofileidandformat(profileid, format, page, pagesize);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.PhotoEditViewModel> getpagededitphotoviewmodelbyprofileidandformatAsync(string profileid, string format, string page, string pagesize) {
            return base.Channel.getpagededitphotoviewmodelbyprofileidandformatAsync(profileid, format, page, pagesize);
        }
        
        public Anewluv.Domain.Data.ViewModels.AnewluvMessages deleteuserphoto(string photoid) {
            return base.Channel.deleteuserphoto(photoid);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> deleteuserphotoAsync(string photoid) {
            return base.Channel.deleteuserphotoAsync(photoid);
        }
        
        public Anewluv.Domain.Data.ViewModels.AnewluvMessages makeuserphoto_private(string photoid) {
            return base.Channel.makeuserphoto_private(photoid);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> makeuserphoto_privateAsync(string photoid) {
            return base.Channel.makeuserphoto_privateAsync(photoid);
        }
        
        public Anewluv.Domain.Data.ViewModels.AnewluvMessages makeuserphoto_public(string photoid) {
            return base.Channel.makeuserphoto_public(photoid);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> makeuserphoto_publicAsync(string photoid) {
            return base.Channel.makeuserphoto_publicAsync(photoid);
        }
        
        public Anewluv.Domain.Data.ViewModels.AnewluvMessages addphotos(Anewluv.Domain.Data.ViewModels.PhotosUploadModel model) {
            return base.Channel.addphotos(model);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> addphotosAsync(Anewluv.Domain.Data.ViewModels.PhotosUploadModel model) {
            return base.Channel.addphotosAsync(model);
        }
        
        public Anewluv.Domain.Data.ViewModels.AnewluvMessages addsinglephoto(Anewluv.Domain.Data.ViewModels.PhotoUploadModel newphoto, string profileid) {
            return base.Channel.addsinglephoto(newphoto, profileid);
        }
        
        public System.Threading.Tasks.Task<Anewluv.Domain.Data.ViewModels.AnewluvMessages> addsinglephotoAsync(Anewluv.Domain.Data.ViewModels.PhotoUploadModel newphoto, string profileid) {
            return base.Channel.addsinglephotoAsync(newphoto, profileid);
        }
        
        public bool checkvalidjpggif(byte[] image) {
            return base.Channel.checkvalidjpggif(image);
        }
        
        public System.Threading.Tasks.Task<bool> checkvalidjpggifAsync(byte[] image) {
            return base.Channel.checkvalidjpggifAsync(image);
        }
        
        public string getgalleryphotobyscreenname(string screenname, string format) {
            return base.Channel.getgalleryphotobyscreenname(screenname, format);
        }
        
        public System.Threading.Tasks.Task<string> getgalleryphotobyscreennameAsync(string screenname, string format) {
            return base.Channel.getgalleryphotobyscreennameAsync(screenname, format);
        }
        
        public string getgalleryimagebyphotoid(string photoid, string format) {
            return base.Channel.getgalleryimagebyphotoid(photoid, format);
        }
        
        public System.Threading.Tasks.Task<string> getgalleryimagebyphotoidAsync(string photoid, string format) {
            return base.Channel.getgalleryimagebyphotoidAsync(photoid, format);
        }
        
        public string getgalleryphotobyprofileid(string profileid, string format) {
            return base.Channel.getgalleryphotobyprofileid(profileid, format);
        }
        
        public System.Threading.Tasks.Task<string> getgalleryphotobyprofileidAsync(string profileid, string format) {
            return base.Channel.getgalleryphotobyprofileidAsync(profileid, format);
        }
        
        public string getgalleryimagebynormalizedscreenname(string screenname, string format) {
            return base.Channel.getgalleryimagebynormalizedscreenname(screenname, format);
        }
        
        public System.Threading.Tasks.Task<string> getgalleryimagebynormalizedscreennameAsync(string screenname, string format) {
            return base.Channel.getgalleryimagebynormalizedscreennameAsync(screenname, format);
        }
        
        public bool checkifphotocaptionalreadyexists(string profileid, string photocaption) {
            return base.Channel.checkifphotocaptionalreadyexists(profileid, photocaption);
        }
        
        public System.Threading.Tasks.Task<bool> checkifphotocaptionalreadyexistsAsync(string profileid, string photocaption) {
            return base.Channel.checkifphotocaptionalreadyexistsAsync(profileid, photocaption);
        }
        
        public bool checkforgalleryphotobyprofileid(string profileid) {
            return base.Channel.checkforgalleryphotobyprofileid(profileid);
        }
        
        public System.Threading.Tasks.Task<bool> checkforgalleryphotobyprofileidAsync(string profileid) {
            return base.Channel.checkforgalleryphotobyprofileidAsync(profileid);
        }
        
        public bool checkforuploadedphotobyprofileid(string profileid) {
            return base.Channel.checkforuploadedphotobyprofileid(profileid);
        }
        
        public System.Threading.Tasks.Task<bool> checkforuploadedphotobyprofileidAsync(string profileid) {
            return base.Channel.checkforuploadedphotobyprofileidAsync(profileid);
        }
        
        public string getimageb64stringfromurl(string imageUrl, string source) {
            return base.Channel.getimageb64stringfromurl(imageUrl, source);
        }
        
        public System.Threading.Tasks.Task<string> getimageb64stringfromurlAsync(string imageUrl, string source) {
            return base.Channel.getimageb64stringfromurlAsync(imageUrl, source);
        }
    }
}
